/**
 * Koding API
 * Koding API for integrating your application with Koding services
 *
 * OpenAPI spec version: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KodingApi);
  }
}(this, function(expect, KodingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KodingApi.JRewardCampaign();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JRewardCampaign', function() {
    it('should create an instance of JRewardCampaign', function() {
      // uncomment below and update the code to test JRewardCampaign
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be.a(KodingApi.JRewardCampaign);
    });

    it('should have the property id (base name: "_id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property slug (base name: "slug")', function() {
      // uncomment below and update the code to test the property slug
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "isActive")', function() {
      // uncomment below and update the code to test the property isActive
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property unit (base name: "unit")', function() {
      // uncomment below and update the code to test the property unit
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property initialAmount (base name: "initialAmount")', function() {
      // uncomment below and update the code to test the property initialAmount
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property maxAmount (base name: "maxAmount")', function() {
      // uncomment below and update the code to test the property maxAmount
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property perEventAmount (base name: "perEventAmount")', function() {
      // uncomment below and update the code to test the property perEventAmount
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property givenAmount (base name: "givenAmount")', function() {
      // uncomment below and update the code to test the property givenAmount
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new KodingApi.JRewardCampaign();
      //expect(instance).to.be();
    });

  });

}));
