/**
 * Koding API
 * Koding API for integrating your application with Koding services
 *
 * OpenAPI spec version: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KodingApi);
  }
}(this, function(expect, KodingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KodingApi.JComputeStack();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JComputeStack', function() {
    it('should create an instance of JComputeStack', function() {
      // uncomment below and update the code to test JComputeStack
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be.a(KodingApi.JComputeStack);
    });

    it('should have the property id (base name: "_id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

    it('should have the property originId (base name: "originId")', function() {
      // uncomment below and update the code to test the property originId
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

    it('should have the property group (base name: "group")', function() {
      // uncomment below and update the code to test the property group
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

    it('should have the property baseStackId (base name: "baseStackId")', function() {
      // uncomment below and update the code to test the property baseStackId
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

    it('should have the property stackRevision (base name: "stackRevision")', function() {
      // uncomment below and update the code to test the property stackRevision
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

    it('should have the property machines (base name: "machines")', function() {
      // uncomment below and update the code to test the property machines
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

    it('should have the property config (base name: "config")', function() {
      // uncomment below and update the code to test the property config
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

    it('should have the property meta (base name: "meta")', function() {
      // uncomment below and update the code to test the property meta
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

    it('should have the property credentials (base name: "credentials")', function() {
      // uncomment below and update the code to test the property credentials
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new KodingApi.JComputeStack();
      //expect(instance).to.be();
    });

  });

}));
