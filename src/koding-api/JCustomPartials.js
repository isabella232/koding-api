/**
 * Koding API
 * Koding API for integrating your application with Koding services
 *
 * OpenAPI spec version: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.KodingApi) {
      root.KodingApi = {};
    }
    root.KodingApi.JCustomPartials = factory(root.KodingApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The JCustomPartials model module.
   * @module koding-api/JCustomPartials
   * @version 0.0.3
   */

  /**
   * Constructs a new <code>JCustomPartials</code>.
   * @alias module:koding-api/JCustomPartials
   * @class
   */
  var exports = function() {
    var _this = this;











  };

  /**
   * Constructs a <code>JCustomPartials</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:koding-api/JCustomPartials} obj Optional instance to populate.
   * @return {module:koding-api/JCustomPartials} The populated <code>JCustomPartials</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('_id')) {
        obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('partialType')) {
        obj['partialType'] = ApiClient.convertToType(data['partialType'], 'String');
      }
      if (data.hasOwnProperty('partial')) {
        obj['partial'] = ApiClient.convertToType(data['partial'], Object);
      }
      if (data.hasOwnProperty('isActive')) {
        obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
      }
      if (data.hasOwnProperty('isPreview')) {
        obj['isPreview'] = ApiClient.convertToType(data['isPreview'], 'Boolean');
      }
      if (data.hasOwnProperty('previewInstance')) {
        obj['previewInstance'] = ApiClient.convertToType(data['previewInstance'], 'String');
      }
      if (data.hasOwnProperty('viewInstance')) {
        obj['viewInstance'] = ApiClient.convertToType(data['viewInstance'], 'String');
      }
      if (data.hasOwnProperty('createdAt')) {
        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
      }
      if (data.hasOwnProperty('publishedAt')) {
        obj['publishedAt'] = ApiClient.convertToType(data['publishedAt'], 'Date');
      }
    }
    return obj;
  }

  /**
   * @member {String} _id
   */
  exports.prototype['_id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} partialType
   */
  exports.prototype['partialType'] = undefined;
  /**
   * @member {Object} partial
   */
  exports.prototype['partial'] = undefined;
  /**
   * @member {Boolean} isActive
   */
  exports.prototype['isActive'] = undefined;
  /**
   * @member {Boolean} isPreview
   */
  exports.prototype['isPreview'] = undefined;
  /**
   * @member {String} previewInstance
   */
  exports.prototype['previewInstance'] = undefined;
  /**
   * @member {String} viewInstance
   */
  exports.prototype['viewInstance'] = undefined;
  /**
   * @member {Date} createdAt
   */
  exports.prototype['createdAt'] = undefined;
  /**
   * @member {Date} publishedAt
   */
  exports.prototype['publishedAt'] = undefined;



  return exports;
}));


