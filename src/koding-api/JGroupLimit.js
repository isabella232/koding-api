/**
 * Koding API
 * Koding API for integrating your application with Koding services
 *
 * OpenAPI spec version: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'koding-api/JGroupLimitRestrictions'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./JGroupLimitRestrictions'));
  } else {
    // Browser globals (root is window)
    if (!root.KodingApi) {
      root.KodingApi = {};
    }
    root.KodingApi.JGroupLimit = factory(root.KodingApi.ApiClient, root.KodingApi.JGroupLimitRestrictions);
  }
}(this, function(ApiClient, JGroupLimitRestrictions) {
  'use strict';




  /**
   * The JGroupLimit model module.
   * @module koding-api/JGroupLimit
   * @version 0.0.3
   */

  /**
   * Constructs a new <code>JGroupLimit</code>.
   * @alias module:koding-api/JGroupLimit
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>JGroupLimit</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:koding-api/JGroupLimit} obj Optional instance to populate.
   * @return {module:koding-api/JGroupLimit} The populated <code>JGroupLimit</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('_id')) {
        obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('member')) {
        obj['member'] = ApiClient.convertToType(data['member'], 'Number');
      }
      if (data.hasOwnProperty('validFor')) {
        obj['validFor'] = ApiClient.convertToType(data['validFor'], 'Number');
      }
      if (data.hasOwnProperty('instancePerMember')) {
        obj['instancePerMember'] = ApiClient.convertToType(data['instancePerMember'], 'Number');
      }
      if (data.hasOwnProperty('allowedInstances')) {
        obj['allowedInstances'] = ApiClient.convertToType(data['allowedInstances'], ['String']);
      }
      if (data.hasOwnProperty('maxInstance')) {
        obj['maxInstance'] = ApiClient.convertToType(data['maxInstance'], 'Number');
      }
      if (data.hasOwnProperty('storagePerInstance')) {
        obj['storagePerInstance'] = ApiClient.convertToType(data['storagePerInstance'], 'Number');
      }
      if (data.hasOwnProperty('restrictions')) {
        obj['restrictions'] = JGroupLimitRestrictions.constructFromObject(data['restrictions']);
      }
    }
    return obj;
  }

  /**
   * @member {String} _id
   */
  exports.prototype['_id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Number} member
   */
  exports.prototype['member'] = undefined;
  /**
   * @member {Number} validFor
   */
  exports.prototype['validFor'] = undefined;
  /**
   * @member {Number} instancePerMember
   */
  exports.prototype['instancePerMember'] = undefined;
  /**
   * @member {Array.<String>} allowedInstances
   */
  exports.prototype['allowedInstances'] = undefined;
  /**
   * @member {Number} maxInstance
   */
  exports.prototype['maxInstance'] = undefined;
  /**
   * @member {Number} storagePerInstance
   */
  exports.prototype['storagePerInstance'] = undefined;
  /**
   * @member {module:koding-api/JGroupLimitRestrictions} restrictions
   */
  exports.prototype['restrictions'] = undefined;



  return exports;
}));


